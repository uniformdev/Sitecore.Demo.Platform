version: "2.4"

services:

  traefik:
    volumes:
      - ./data/traefik:C:/etc/traefik
    depends_on:
      cm:
        condition: service_healthy
    networks:
      - demo

  mssql:
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    image: ${REGISTRY}demo/lighthouse-mssql:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    environment:
      USER_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      ADMIN_USER_NAME: "sitecore\\superuser"
      DISABLE_DEFAULT_ADMIN: 'FALSE'
      EXM_BASE_URL: "https://${CD_HOST}"
      START_OVERRIDE_SCRIPTS: "start-override-platform-windows.ps1"
      COVEO_ADMIN_USER_NAME: ${COVEO_ADMIN_USER_NAME}
    mem_limit: 2GB
    volumes:
      - type: bind
        source: .\data\sql
        target: c:\data
    networks:
      - demo

  solr:
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    image: ${REGISTRY}demo/lighthouse-solr:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    mem_limit: 1GB
    volumes:
      - type: bind
        source: .\data\solr
        target: c:\data
    networks:
      - demo

  id:
    image: ${REGISTRY}demo/lighthouse-id:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup2: https://${SH_HOST}|http://${SH_HOST}
    networks:
      - demo

  cm:
    image: ${REGISTRY}demo/lighthouse-xp0-cm:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\inetpub\\wwwroot'; ExcludeFiles = @('C:\\src\\Web.config'); }"
    mem_limit: 4G
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_APPSETTINGS_SXAXM:DEFINE: sxaxconnect
      SITECORE_APPSETTINGS_ENV:DEFINE: Docker
      SITECORE_APPSETTINGS_UNICORN:DEFINE: Enabled
      SITECORE_APPSETTINGS_PUBLISHINGSERVICE:DEFINE: Enabled
      SOLR_CORE_PREFIX_NAME: sitecore
      SITECORE_APPSETTINGS_INTEGRATIONS:DEFINE: Salesforce
      SITECORE_APPSETTINGS_CONTENTHUB:DEFINE: Enabled
      SITECORE_CONNECTIONSTRINGS_CMP.ContentHub: ${CMP_CONTENTHUB}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusEntityPathIn: ${CMP_SERVICEBUSENTITYPATHIN}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusSubscription: ${CMP_SERVICEBUSSUBSCRIPTION}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusEntityPathOut: ${CMP_SERVICEBUSENTITYPATHOUT}
      SITECORE_CONNECTIONSTRINGS_SFMC: ${SFMC_CONNECTIONSTRING}
      SITECORE_CONNECTIONSTRINGS_SFDC: ${SFDC_CONNECTIONSTRING} 
      SITECORE_CONNECTIONSTRINGS_Sitecore.Services.Token.SecurityKey: key=${SITECORE_SERVICES_TOKEN_SECURITYKEY}
      EXM_RENDERER_URL: http://cm
      Sitecore_Horizon_ClientHost: https://${SH_HOST}
      HOST_CD: http://cm
      COVEO_SERVER_URL: ${COVEO_SERVER_URL}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\items:c:\items
      - .\data\cm\src:C:\src
      - .\data\cm\backup:c:\backup
    depends_on:
      ps:
        condition: service_healthy
      id:
        condition: service_healthy
      xconnect:
        condition: service_healthy
    networks:
      demo:
        aliases:
          - "${CM_HOST}"

  xconnect:
    image: ${REGISTRY}demo/lighthouse-xp0-xconnect:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    # TODO: Do we need a specific xConnect entrypoint like in 9.3?
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\inetpub\\wwwroot'; ExcludeFiles = @('Web.config'); }"
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\data\xconnect\src:C:\src
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\
    depends_on:
      mssql:
        condition: service_healthy
      solr:
        condition: service_healthy
    networks:
      - demo

  xdbsearchworker:
    image: ${REGISTRY}demo/lighthouse-xp0-xdbsearchworker:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\worker\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\service'; }"
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\data\indexworker\src:C:\src
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\
    networks:
      - demo

  xdbautomationworker:
    image: ${REGISTRY}demo/lighthouse-xp0-xdbautomationworker:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\
    networks:
      - demo

  ps:
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    image: ${REGISTRY}demo/lighthouse-ps:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    isolation: ${ISOLATION}
    restart: unless-stopped
    environment:
      CONN_STRING_CORE: Data Source=mssql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      CONN_STRING_MASTER: Data Source=mssql;Initial Catalog=Sitecore.Master;User ID=sa;Password=${SQL_SA_PASSWORD}
      CONN_STRING_WEB: Data Source=mssql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD}
    depends_on:
      mssql:
        condition: service_healthy
    ports:
      - "44015:80"
    networks:
      - demo

  init:
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    image: ${REGISTRY}demo/lighthouse-init:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    isolation: ${ISOLATION}
    environment:
      ADMIN_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      ADMIN_USER_NAME: "superuser"
      HOST_CD: "http://cm"
      HOST_CM: "http://cm"
      HOST_PS: "http://ps"
      HOST_ID: "http://id"
      MARKETING_DEFINITIONS_APIKEY: ${MARKETING_DEFINITIONS_APIKEY}
      SKIP_WARMUP_CD: ${SKIP_WARMUP_CD}
      DAM_URL: ${DAM_URL}
      INIT_CONTEXT: Data Source=mssql;Initial Catalog=platform_init_ready;User ID=sa;Password=${SQL_SA_PASSWORD}
      COVEO_ORGANIZATION_ID: ${COVEO_ORGANIZATION_ID}
      COVEO_API_KEY: ${COVEO_API_KEY}
      COVEO_SEARCH_API_KEY: ${COVEO_SEARCH_API_KEY}
      COVEO_FARM_NAME: ${COVEO_FARM_NAME}
      COVEO_ADMIN_USER_NAME: ${COVEO_ADMIN_USER_NAME}
    depends_on:
      mssql:
        condition: service_healthy
      ps:
        condition: service_healthy
      cm:
        condition: service_healthy
    networks:
      - demo

  authoringhost:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz/live"]
    image: ${REGISTRY}demo/lighthouse-authoringhost:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    isolation: ${ISOLATION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      Sitecore_FederatedUI__HostBaseUrl: http://authoringhost
      Sitecore_ApiGateway__SitecoreHost: https://${CM_HOST}
      Sitecore_Proxy__DataServiceEndpoint: https://${CM_HOST}
      Sitecore_ApiGateway__InternalSitecoreHost: http://cm
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__RequireHttpsMetadata: 'false'
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__CallbackAuthority: https://${SH_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__RequireHttpsMetadata: 'false'
      Sitecore_Plugins__Filters__ContentHub: +ContentHub
      Sitecore_ContentHubDam__PlatformUrl: http://cm
      Sitecore_Sitecore__Logging__Serilog__MinimumLevel__Default: Debug
    depends_on:
      id:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.sh-secure.entrypoints=websecure"
      - "traefik.http.routers.sh-secure.rule=Host(`${SH_HOST}`)"
      - "traefik.http.routers.sh-secure.tls=true"
      - "traefik.http.routers.sh-secure.middlewares=force-STS-Header"
      - "traefik.http.services.sh.loadbalancer.server.port=80"
    networks:
      demo:
        aliases:
          - ${SH_HOST}
networks:
  demo:
    external:
      name: nat
